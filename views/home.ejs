<%- include('partials/notification')%> <%- include('partials/sidenav')%> <%-
include('partials/upload-modal')%>

<script src="js/modals.js"></script>
<link rel="stylesheet" href="css/modals.css" />

<style>
  .row {
    margin: 15px;
  }
  .image-card {
    position: relative;
    height: 200px;
    width: 100%;
    display: block;
    margin: 1rem 0.3rem;
  }
  .image-a {
    padding: 0;
  }
  .images:hover {
    transform: scale(1.1);
    -webkit-transform: scale(1.1);
    -moz-transform: scale(1.1);
    -ms-transform: scale(1.1);
    -o-transform: scale(1.1);

    -webkit-box-shadow: 0px 0px 8px 0px black;
    -moz-box-shadow: 0px 0px 8px 0px black;
    box-shadow: 0px 0px 8px 0px black;
  }
  .image-caption-col {
    text-align: center;
    overflow-wrap: break-word;
  }
</style>

<div class="container image-container">
  <script></script>
</div>
<div class="no-image-container">
  <img
    src="images/no-image.jpg"
    style="
    max-width: none;
    width: 40%;
    margin-left: 30%;
    margin-top: 10%;
"
  />
</div>
<div class="bottom-loader">
  <img src="images/loader.svg" class="bottom-loader-image" />
</div>
<div
  class="footer"
  style="
    position: fixed;
    bottom: 23px;
    left: 2%;
    z-index: 10;
    width: 95%;
"
>
  <div class="progress">
    <div
      class="progress-bar progress-bar-striped progress-bar-animated"
      id="progress"
      style="height: 1rem"
    ></div>
  </div>
</div>
<script>
  let loaderShow = true;
  let lastEle = "";
  function stopDefault(event) {
    
    event.preventDefault();
    event.stopPropagation();
  }
  function dragOver(label, text) {
    
    label.style.animationName = "dropbox";
    label.innerText = text;
  }
  function dragLeave(label) {
    var len = label.style.length;
    for (var i = 0; i < len; i++) {
      label.style[label.style[i]] = "";
    }
    label.innerText = "Click to choose images or drag-n-drop them here";
  }
  function addFilesAndSubmit(event) {
    
    var files = event.target.files || event.dataTransfer.files;
    document.getElementById("filesfld").files = files;
    fileSelected(event);
  }
  function submitFilesForm(form) {
    return false;
  }
  function showSuccess() {
    $(".no-image-container").hide();
    $(".notification").show();
    $(".notification-content").text("Images uploaded successfully");
    $("#notification-card").css({ "background-color": "#d4ffd1" });
    $(".notification").fadeOut(4000);
  }
  function showError(message) {
    if (!message) {
      message = "Couldnot upload image. Please try again later";
    }
    $(".notification").show();
    $("#notification-card").css({ "background-color": "#f5aeab" });
    $(".notification-content").text(message);
    $(".notification").fadeOut(8000);
  }
  function showWarning() {
    $(".notification").show();
    $("#notification-card").css({ "background-color": "#fffbab" });
    $(".notification-content").text("No file selected");
    $(".notification").fadeOut(5000);
  }
  function hideNotification(){
    $(".notification").hide()
  }
  function fileSelected(e) {
    let files = document.getElementById("filesfld").files;
    let names = "";
    for (let file of files) {
      names += file.name + " ";
    }
    $(".filename-card").text(names);
  }
  function uploadImages() {
    //stop submit the form, we will post it manually.
    event.preventDefault();

    // Get form
    var form = $("#filesfrm")[0];
    $("#uploadModal").modal("hide");
    if (form.filesfld.files.length === 0) {
      showWarning();
      return false;
    }

    var data = new FormData(form);

    $.ajax({
      type: "POST",
      enctype: "multipart/form-data",
      url: "http://13.233.254.7:5000/upload",
      data: data,
      processData: false,
      contentType: false,
      cache: false,
      timeout: 600000,
      xhr: function() {
        var xhr = new window.XMLHttpRequest();
        xhr.upload.addEventListener(
          "progress",
          function(evt) {
            if (evt.lengthComputable) {
              var percentComplete = evt.loaded / evt.total;
              percentComplete = parseInt(percentComplete * 100);
              $(".progress").show();
              if (percentComplete < 90) {
                $("#progress").text(percentComplete + "%");
                $("#progress").css("width", percentComplete + "%");
              }
            }
          },
          false
        );
        return xhr;
      },
      success: function(data) {
        loaderShow = true;
        $("#progress").text(100 + "%");
        $("#progress").css("width", 100 + "%");
        $(".progress").fadeOut(800);
        showSuccess();
        addImage(data, "upload");
      },
      error: function(e) {
        $(".progress").hide();
        if (e.status === 400) {
          showError("Shorter side of image should be atleast 500px");
        } else if (e.status === 401) {
          showError("Images should be in either in JPEG , JPG or PNG format");
        } else {
          showError("");
        }
      }
    });
  }
  $(document).ready(function() {
    let imageArr = JSON.parse(`<%- data.Images%>`);
    
    $(".upload-btn").click(function(event) {
      uploadImages();
    });

    $(window).scroll(function(event) {
      if ($(window).scrollTop() + $(window).height() >= $(document).height()) {
        if (loaderShow) $(".bottom-loader").show();
        event.stopPropagation();
        event.preventDefault();
        $.ajax({
          url: "/home/getImage",
          method: "POST",
          data: { LastDate: lastEle.date },
          dataType: "json",
          success: function(data) {
            
            if (Object.keys(data).length == 0) {
              loaderShow = false;
            }
            $(".bottom-loader").hide();
            addImage(data, 'scroll')
          
          },
          error: function(error) {
            $(".bottom-loader").hide();
            console.log(error);
          }
        });
      }
    });

    let dateClicked = "";
    $(document).on("click", '[data-toggle="lightbox"]', function(event) {
      event.preventDefault();
      $(this).ekkoLightbox();
    });
    let i = 0;
    if (Object.keys(imageArr).length > 0) {
      addImage(imageArr, "onload");
    } else {
      $(".no-image-container").show();
    }
  });
  function addImage(imageArr, addType) {
    
    for (let file in imageArr) {
      if (addType.toLowerCase() == "upload" || addType.toLowerCase() == "scroll") {
        let displayText = file + " (" + imageArr[file].length + ")";
        let dateRow = document.getElementById(file);

        if (!dateRow) {
          let outerDiv =
            '<div class="card date-row" id="' +
            file +
            '">' +
            displayText +
            '</div><div class="row image-row '+file+'"></div>';
          $(".image-container").append(outerDiv);
        } else {
          let text = parseInt(
            dateRow.innerText
              .replace("(", "")
              .replace(")", "")
              .split(" ")[1]
          );
          text = file + " (" + (imageArr[file].length + text).toString() + ")";
          $("#" + file).text(text);
        }
      } else if (addType.toLowerCase() == "onload") {
        let displayText = file + " (" + imageArr[file].length + ")";
        let outerDiv =
          '<div class="card date-row" id="' +
          file +
          '">' +
          displayText +
          '</div><div class="row image-row ' +
          file +
          '"></div>';
        $(".image-container").append(outerDiv);
        if (imageArr.length == 0) {
          $(".image-container").hide();
        } else {
          $(".no-image-container").hide();
        }
      }
      for (i = 0; i < imageArr[file].length; i++) {
        let ele =
          '<div class="col-md-3"><div class="image-card"><a href="' +
          imageArr[file][i].file3 +
          '"data-toggle="lightbox" data-gallery="gallery" class="col-md-4 image-a ' +
          file +
          '_class"> <img src="' +
          imageArr[file][i].file3 +
          '"class="img-fluid rounded images"/></a></div></div>';
        $("." + file).append(ele);
      }
      lastEle = imageArr[file][i - 1];
    }
    
  }
</script>
